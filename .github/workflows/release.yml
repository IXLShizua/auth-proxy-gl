name: Build and Publish Rust Application

on:
  push:
    branches:
      - '**'
    tags:
      - '*'
    paths-ignore:
      - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.target }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install Cross RS
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Install aarch64-linux-gnu-gcc
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build project
        run: cross build --release --target ${{ matrix.target }}

      - name: Archive artifact
        run: zip -j auth-proxy-gl-${{ matrix.target }}.zip target/${{ matrix.target }}/release/auth-proxy-gl

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-build
          path: auth-proxy-gl-${{ matrix.target }}.zip

  release:
    if: github.ref == 'refs/heads/Dev' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download x86_64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: x86_64-unknown-linux-gnu-build
          path: artifacts/x86_64

      - name: Download aarch64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: aarch64-unknown-linux-gnu-build
          path: artifacts/aarch64

      - name: Set Release Variables
        id: set_release_variables
        shell: bash
        run: |
          # Удаляем префиксы refs/tags/ и refs/heads/
          ref_name=$(echo "$GITHUB_REF" | sed -e 's/^refs\/tags\///' -e 's/^refs\/heads\///')
          if [ "$ref_name" = "Dev" ]; then
            ts=$(date +'%Y%m%d%H%M%S')
            release_name="auth-proxy-gl-${ts}"
          else
            release_name="$ref_name"
          fi
          echo "release_name=${release_name}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.set_release_variables.outputs.release_name }}
          release_name: ${{ steps.set_release_variables.outputs.release_name }}
          draft: false
          prerelease: ${{ github.ref == 'refs/heads/Dev' }}
          body: >
            Automated release for version ${{ steps.set_release_variables.outputs.release_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux (x86_64) Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/x86_64/auth-proxy-gl-x86_64-unknown-linux-gnu.zip
          asset_name: auth-proxy-gl-x86_64-unknown-linux-gnu.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux (aarch64) Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/aarch64/auth-proxy-gl-aarch64-unknown-linux-gnu.zip
          asset_name: auth-proxy-gl-aarch64-unknown-linux-gnu.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
