name: Build and Publish Rust Application

on:
  push:
    branches: [ master ]

jobs:
  check_merge:
    runs-on: ubuntu-latest
    outputs:
      is_merge: ${{ steps.check.outputs.is_merge }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if commit is a merge into master
        id: check
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ] && git rev-parse ${{ github.sha }}^2 >/dev/null 2>&1; then
            echo "is_merge=true" >> $GITHUB_OUTPUT
          else
            echo "is_merge=false" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.target }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install aarch64-linux-gnu-gcc
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-build
          path: target/${{ matrix.target }}/release/auth-proxy-gl

  release:
    needs: [ check_merge, build ]
    if: needs.check_merge.outputs.is_merge == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download x86_64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: x86_64-unknown-linux-gnu-build
          path: $GITHUB_WORKSPACE/artifacts

      - name: Download aarch64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: aarch64-unknown-linux-gnu-build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: "Automated release for version ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux (x86-64) Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: $GITHUB_WORKSPACE/artifacts/x86_64-unknown-linux-gnu-build
          asset_name: auth-proxy-gl-x86_64-unknown-linux-gnu
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux (aarch64) Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: $GITHUB_WORKSPACE/artifacts/aarch64-unknown-linux-gnu-build
          asset_name: auth-proxy-gl-aarch64-unknown-linux-gnu
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
